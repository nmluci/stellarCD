// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.10
// source: hentai.proto

package hentai

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId   int64  `protobuf:"varint,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Type  string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Url   string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Count int64  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hentai_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_hentai_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_hentai_proto_rawDescGZIP(), []int{0}
}

func (x *Tag) GetXId() int64 {
	if x != nil {
		return x.XId
	}
	return 0
}

func (x *Tag) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Tag) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Width  int64  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height int64  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hentai_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_hentai_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_hentai_proto_rawDescGZIP(), []int{1}
}

func (x *Page) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Page) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Page) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Title struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jp     string `protobuf:"bytes,1,opt,name=jp,proto3" json:"jp,omitempty"`
	Eng    string `protobuf:"bytes,2,opt,name=eng,proto3" json:"eng,omitempty"`
	Pretty string `protobuf:"bytes,3,opt,name=pretty,proto3" json:"pretty,omitempty"`
}

func (x *Title) Reset() {
	*x = Title{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hentai_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Title) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Title) ProtoMessage() {}

func (x *Title) ProtoReflect() protoreflect.Message {
	mi := &file_hentai_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Title.ProtoReflect.Descriptor instead.
func (*Title) Descriptor() ([]byte, []int) {
	return file_hentai_proto_rawDescGZIP(), []int{2}
}

func (x *Title) GetJp() string {
	if x != nil {
		return x.Jp
	}
	return ""
}

func (x *Title) GetEng() string {
	if x != nil {
		return x.Eng
	}
	return ""
}

func (x *Title) GetPretty() string {
	if x != nil {
		return x.Pretty
	}
	return ""
}

type ImageMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ext    string `protobuf:"bytes,1,opt,name=ext,proto3" json:"ext,omitempty"`
	Width  int64  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height int64  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *ImageMeta) Reset() {
	*x = ImageMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hentai_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMeta) ProtoMessage() {}

func (x *ImageMeta) ProtoReflect() protoreflect.Message {
	mi := &file_hentai_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMeta.ProtoReflect.Descriptor instead.
func (*ImageMeta) Descriptor() ([]byte, []int) {
	return file_hentai_proto_rawDescGZIP(), []int{3}
}

func (x *ImageMeta) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *ImageMeta) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageMeta) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type RawImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pages     []*ImageMeta `protobuf:"bytes,1,rep,name=pages,proto3" json:"pages,omitempty"`
	Cover     *ImageMeta   `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	Thumbnail *ImageMeta   `protobuf:"bytes,3,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
}

func (x *RawImage) Reset() {
	*x = RawImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hentai_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawImage) ProtoMessage() {}

func (x *RawImage) ProtoReflect() protoreflect.Message {
	mi := &file_hentai_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawImage.ProtoReflect.Descriptor instead.
func (*RawImage) Descriptor() ([]byte, []int) {
	return file_hentai_proto_rawDescGZIP(), []int{4}
}

func (x *RawImage) GetPages() []*ImageMeta {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *RawImage) GetCover() *ImageMeta {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *RawImage) GetThumbnail() *ImageMeta {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MediaId    int64     `protobuf:"varint,2,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	Title      *Title    `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Favorites  int64     `protobuf:"varint,4,opt,name=favorites,proto3" json:"favorites,omitempty"`
	Thumbnail  string    `protobuf:"bytes,5,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Cover      string    `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	Scanlator  string    `protobuf:"bytes,7,opt,name=scanlator,proto3" json:"scanlator,omitempty"`
	Uploaded   string    `protobuf:"bytes,8,opt,name=uploaded,proto3" json:"uploaded,omitempty"`
	EpochTime  int64     `protobuf:"varint,9,opt,name=epoch_time,json=epochTime,proto3" json:"epoch_time,omitempty"`
	Characters []*Tag    `protobuf:"bytes,10,rep,name=characters,proto3" json:"characters,omitempty"`
	Pages      []*Page   `protobuf:"bytes,11,rep,name=pages,proto3" json:"pages,omitempty"`
	Tags       []string  `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	NumPages   int64     `protobuf:"varint,13,opt,name=num_pages,json=numPages,proto3" json:"num_pages,omitempty"`
	RawTags    []*Tag    `protobuf:"bytes,14,rep,name=raw_tags,json=rawTags,proto3" json:"raw_tags,omitempty"`
	RawImages  *RawImage `protobuf:"bytes,15,opt,name=raw_images,json=rawImages,proto3" json:"raw_images,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hentai_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_hentai_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_hentai_proto_rawDescGZIP(), []int{5}
}

func (x *Book) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Book) GetMediaId() int64 {
	if x != nil {
		return x.MediaId
	}
	return 0
}

func (x *Book) GetTitle() *Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *Book) GetFavorites() int64 {
	if x != nil {
		return x.Favorites
	}
	return 0
}

func (x *Book) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *Book) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Book) GetScanlator() string {
	if x != nil {
		return x.Scanlator
	}
	return ""
}

func (x *Book) GetUploaded() string {
	if x != nil {
		return x.Uploaded
	}
	return ""
}

func (x *Book) GetEpochTime() int64 {
	if x != nil {
		return x.EpochTime
	}
	return 0
}

func (x *Book) GetCharacters() []*Tag {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *Book) GetPages() []*Page {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *Book) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Book) GetNumPages() int64 {
	if x != nil {
		return x.NumPages
	}
	return 0
}

func (x *Book) GetRawTags() []*Tag {
	if x != nil {
		return x.RawTags
	}
	return nil
}

func (x *Book) GetRawImages() *RawImage {
	if x != nil {
		return x.RawImages
	}
	return nil
}

type BookQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Query     string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Page      int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sort      string `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Requester string `protobuf:"bytes,5,opt,name=requester,proto3" json:"requester,omitempty"`
}

func (x *BookQuery) Reset() {
	*x = BookQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hentai_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookQuery) ProtoMessage() {}

func (x *BookQuery) ProtoReflect() protoreflect.Message {
	mi := &file_hentai_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookQuery.ProtoReflect.Descriptor instead.
func (*BookQuery) Descriptor() ([]byte, []int) {
	return file_hentai_proto_rawDescGZIP(), []int{6}
}

func (x *BookQuery) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BookQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *BookQuery) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *BookQuery) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *BookQuery) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

type Books struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Books []*Book `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
}

func (x *Books) Reset() {
	*x = Books{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hentai_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Books) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Books) ProtoMessage() {}

func (x *Books) ProtoReflect() protoreflect.Message {
	mi := &file_hentai_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Books.ProtoReflect.Descriptor instead.
func (*Books) Descriptor() ([]byte, []int) {
	return file_hentai_proto_rawDescGZIP(), []int{7}
}

func (x *Books) GetBooks() []*Book {
	if x != nil {
		return x.Books
	}
	return nil
}

type BookNoQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requester string `protobuf:"bytes,5,opt,name=requester,proto3" json:"requester,omitempty"`
}

func (x *BookNoQuery) Reset() {
	*x = BookNoQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hentai_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookNoQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookNoQuery) ProtoMessage() {}

func (x *BookNoQuery) ProtoReflect() protoreflect.Message {
	mi := &file_hentai_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookNoQuery.ProtoReflect.Descriptor instead.
func (*BookNoQuery) Descriptor() ([]byte, []int) {
	return file_hentai_proto_rawDescGZIP(), []int{8}
}

func (x *BookNoQuery) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hentai_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_hentai_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_hentai_proto_rawDescGZIP(), []int{9}
}

var File_hentai_proto protoreflect.FileDescriptor

var file_hentai_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x22, 0x66, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x0f, 0x0a,
	0x03, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x46,
	0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x41, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x6a, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6a, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e,
	0x67, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x74, 0x74, 0x79, 0x22, 0x4b, 0x0a, 0x09, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x65,
	0x6e, 0x74, 0x61, 0x69, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61,
	0x69, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x22, 0xdc, 0x03, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x65, 0x6e, 0x74,
	0x61, 0x69, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x0a, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x08,
	0x72, 0x61, 0x77, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x07, 0x72, 0x61, 0x77,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61,
	0x69, 0x2e, 0x52, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x09, 0x72, 0x61, 0x77, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x77, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x2b,
	0x0a, 0x05, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x2b, 0x0a, 0x0b, 0x42,
	0x6f, 0x6f, 0x6b, 0x4e, 0x6f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x32, 0xfb, 0x01, 0x0a, 0x0e, 0x4e, 0x61, 0x6b, 0x61, 0x5a, 0x65, 0x74, 0x74, 0x61, 0x69,
	0x44, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x11, 0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x0c, 0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x13, 0x2e,
	0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x6f, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x1a, 0x0c, 0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x22, 0x00, 0x12, 0x2c, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x11, 0x2e, 0x68,
	0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x0d, 0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x00,
	0x12, 0x2d, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x11, 0x2e, 0x68, 0x65,
	0x6e, 0x74, 0x61, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0d,
	0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x00, 0x12,
	0x2e, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x11, 0x2e, 0x68, 0x65,
	0x6e, 0x74, 0x61, 0x69, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0d,
	0x2e, 0x68, 0x65, 0x6e, 0x74, 0x61, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42,
	0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6d,
	0x6c, 0x75, 0x63, 0x69, 0x2f, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2d, 0x68, 0x65, 0x6e,
	0x74, 0x61, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x68, 0x65, 0x6e, 0x74,
	0x61, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hentai_proto_rawDescOnce sync.Once
	file_hentai_proto_rawDescData = file_hentai_proto_rawDesc
)

func file_hentai_proto_rawDescGZIP() []byte {
	file_hentai_proto_rawDescOnce.Do(func() {
		file_hentai_proto_rawDescData = protoimpl.X.CompressGZIP(file_hentai_proto_rawDescData)
	})
	return file_hentai_proto_rawDescData
}

var file_hentai_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_hentai_proto_goTypes = []interface{}{
	(*Tag)(nil),         // 0: hentai.Tag
	(*Page)(nil),        // 1: hentai.Page
	(*Title)(nil),       // 2: hentai.Title
	(*ImageMeta)(nil),   // 3: hentai.ImageMeta
	(*RawImage)(nil),    // 4: hentai.RawImage
	(*Book)(nil),        // 5: hentai.Book
	(*BookQuery)(nil),   // 6: hentai.BookQuery
	(*Books)(nil),       // 7: hentai.Books
	(*BookNoQuery)(nil), // 8: hentai.BookNoQuery
	(*Empty)(nil),       // 9: hentai.Empty
}
var file_hentai_proto_depIdxs = []int32{
	3,  // 0: hentai.RawImage.pages:type_name -> hentai.ImageMeta
	3,  // 1: hentai.RawImage.cover:type_name -> hentai.ImageMeta
	3,  // 2: hentai.RawImage.thumbnail:type_name -> hentai.ImageMeta
	2,  // 3: hentai.Book.title:type_name -> hentai.Title
	0,  // 4: hentai.Book.characters:type_name -> hentai.Tag
	1,  // 5: hentai.Book.pages:type_name -> hentai.Page
	0,  // 6: hentai.Book.raw_tags:type_name -> hentai.Tag
	4,  // 7: hentai.Book.raw_images:type_name -> hentai.RawImage
	5,  // 8: hentai.Books.books:type_name -> hentai.Book
	6,  // 9: hentai.NakaZettaiDame.BookByID:input_type -> hentai.BookQuery
	8,  // 10: hentai.NakaZettaiDame.Random:input_type -> hentai.BookNoQuery
	6,  // 11: hentai.NakaZettaiDame.Search:input_type -> hentai.BookQuery
	6,  // 12: hentai.NakaZettaiDame.Related:input_type -> hentai.BookQuery
	6,  // 13: hentai.NakaZettaiDame.Bookmark:input_type -> hentai.BookQuery
	5,  // 14: hentai.NakaZettaiDame.BookByID:output_type -> hentai.Book
	5,  // 15: hentai.NakaZettaiDame.Random:output_type -> hentai.Book
	7,  // 16: hentai.NakaZettaiDame.Search:output_type -> hentai.Books
	7,  // 17: hentai.NakaZettaiDame.Related:output_type -> hentai.Books
	9,  // 18: hentai.NakaZettaiDame.Bookmark:output_type -> hentai.Empty
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_hentai_proto_init() }
func file_hentai_proto_init() {
	if File_hentai_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hentai_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hentai_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hentai_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Title); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hentai_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hentai_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hentai_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hentai_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hentai_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Books); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hentai_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookNoQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hentai_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hentai_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hentai_proto_goTypes,
		DependencyIndexes: file_hentai_proto_depIdxs,
		MessageInfos:      file_hentai_proto_msgTypes,
	}.Build()
	File_hentai_proto = out.File
	file_hentai_proto_rawDesc = nil
	file_hentai_proto_goTypes = nil
	file_hentai_proto_depIdxs = nil
}
